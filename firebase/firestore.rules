rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function hasRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    function isAdmin() {
      return hasRole('admin');
    }

    // Users collection
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isSignedIn() && (isOwner(userId) || isAdmin());
      allow delete: if isAdmin();
    }

    // Tasks collection
    match /tasks/{taskId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (
        resource.data.createdBy == request.auth.uid || 
        resource.data.assignee == request.auth.uid ||
        isAdmin()
      );
      allow delete: if isSignedIn() && (
        resource.data.createdBy == request.auth.uid || 
        isAdmin()
      );
    }

    // Messages collection
    match /messages/{messageId} {
      allow read: if isSignedIn() && (
        resource.data.sender == request.auth.uid ||
        resource.data.recipient == request.auth.uid ||
        resource.data.participants.hasAny([request.auth.uid])
      );
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (
        resource.data.sender == request.auth.uid ||
        resource.data.recipient == request.auth.uid
      );
      allow delete: if isSignedIn() && resource.data.sender == request.auth.uid;
    }

    // Resources collection
    match /resources/{resourceId} {
      allow read: if isSignedIn() && (
        resource.data.accessUsers.hasAny(['Everyone', request.auth.uid])
      );
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (
        resource.data.accessUsers.hasAny([request.auth.uid]) ||
        isAdmin()
      );
      allow delete: if isSignedIn() && (
        resource.data.accessUsers.hasAny([request.auth.uid]) ||
        isAdmin()
      );
    }

    // Notifications collection
    match /notifications/{notificationId} {
      allow read: if isSignedIn() && resource.data.recipient == request.auth.uid;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && resource.data.recipient == request.auth.uid;
      allow delete: if isSignedIn() && resource.data.recipient == request.auth.uid;
    }
  }
}